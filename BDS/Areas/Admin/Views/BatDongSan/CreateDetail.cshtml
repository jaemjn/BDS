
@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@model AFModels.ChiTietBatDongSan


<h2>Thêm Bất Động Sản</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Bất Động Sản</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.Label("Mã BĐS", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaBDS, new
                {
                    htmlAttributes = new
                    {
                        @class = "form-control",@Value = Session["MaBDS"].ToString(),style = "width:200px;",@readonly= "readonly"
                    }
                })
                @Html.ValidationMessageFor(model => model.MaBDS, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Giá", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gia, new { htmlAttributes = new { @class = "form-control", style = "width:200px;" } })
                @Html.ValidationMessageFor(model => model.Gia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Diện tích", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DienTich, new { htmlAttributes = new { @class = "form-control", style = "width:200px;" } })
                @Html.ValidationMessageFor(model => model.DienTich, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Địa chỉ BĐS", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DiaChiBDS, 2, 100, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiaChiBDS, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Mô tả", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Mota, 5, 100, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mota, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Khu vực", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KhuVuc, new { htmlAttributes = new { @class = "form-control", style = "width:300px;" } })
                @Html.ValidationMessageFor(model => model.KhuVuc, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="form-group">
                @Html.Label("Ảnh", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class=" col-md-2">
                    <input type="text" name="Anh" id="Anh" />
                    <br>
                    <input type="button" value="Chọn Ảnh ..." onclick="BrowseServer();" />
                    @Html.ValidationMessageFor(model => model.Anh, "", new { @class = "text-danger" })
                </div>
                <script type="text/javascript">
                    function BrowseServer() {
                        var finder = new CKFinder();
                        //finder.basePath = '../';
                        finder.selectActionFunction = SetFileField;
                        finder.popup();
                    }
                    function SetFileField(fileUrl) {
                        document.getElementById('Anh').value = fileUrl;

                    }
                </script>
            </div>

        </div>

        <div class="form-group">
            @Html.Label("Phòng ngủ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhongNgu, new { htmlAttributes = new { @class = "form-control", style = "width:200px;" } })
                @Html.ValidationMessageFor(model => model.PhongNgu, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Phòng tắm", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhongTam, new { htmlAttributes = new { @class = "form-control", style = "width:200px;" } })
                @Html.ValidationMessageFor(model => model.PhongTam, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Đậu đỗ xe", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Paking", new List<SelectListItem>
            {
            new SelectListItem {Text = "Có", Value = "Yes"},
            new SelectListItem {Text = "Không", Value = "No"}
            }, "--- Chọn ---")
                @Html.ValidationMessageFor(model => model.Paking, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Thêm " class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Quay Lại", "BatDongSan")
</div>

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@


